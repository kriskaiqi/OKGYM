"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express = require('express');
const UserController_1 = require("../controllers/UserController");
const auth_1 = require("../middleware/auth");
const validation_1 = require("../middleware/validation");
const Enums_1 = require("../models/shared/Enums");
const UserDto_1 = require("../dto/UserDto");
const router = express.Router();
const userController = new UserController_1.UserController();
router.get('/check-email', userController.checkEmailAvailability);
router.get('/', auth_1.authenticate, (0, auth_1.authorize)([Enums_1.UserRole.ADMIN]), (0, validation_1.validateRequest)(UserDto_1.UserFilterDto, 'query'), userController.getUsers);
router.get('/filter', auth_1.authenticate, (0, auth_1.authorize)([Enums_1.UserRole.ADMIN]), (0, validation_1.validateRequest)(UserDto_1.UserFilterDto, 'query'), userController.getUsers);
router.post('/', auth_1.authenticate, (0, auth_1.authorize)([Enums_1.UserRole.ADMIN]), (0, validation_1.validateRequest)(UserDto_1.UserCreateDto), userController.createUser);
router.get('/profile', auth_1.authenticate, userController.getProfile);
router.get('/profile/v2', auth_1.authenticate, userController.getProfile);
router.get('/progress', auth_1.authenticate, userController.getUserProgress);
router.get('/activity', auth_1.authenticate, userController.getUserActivity);
router.put('/profile', auth_1.authenticate, (0, validation_1.validateRequest)(UserDto_1.UserUpdateDto), userController.updateProfile);
router.put('/profile/fitness', auth_1.authenticate, (0, validation_1.validateRequest)(UserDto_1.UserFitnessProfileDto), userController.updateFitnessProfile);
router.put('/profile/preferences', auth_1.authenticate, (0, validation_1.validateRequest)(UserDto_1.UserPreferencesDto), userController.updatePreferences);
router.put('/stats', auth_1.authenticate, (0, validation_1.validateRequest)(UserDto_1.UserStatsUpdateDto), userController.updateStats);
router.post('/preferences/cleanup', auth_1.authenticate, userController.cleanupPreferences);
router.post('/change-password', auth_1.authenticate, (0, validation_1.validateRequest)(UserDto_1.ChangePasswordDto), userController.changePassword);
router.get('/:id', auth_1.authenticate, userController.getUserById);
router.put('/:id', auth_1.authenticate, (0, validation_1.validateRequest)(UserDto_1.UserUpdateDto), userController.updateUser);
router.put('/:id/fitness', auth_1.authenticate, (0, validation_1.validateRequest)(UserDto_1.UserFitnessProfileDto), userController.updateFitnessProfile);
router.put('/:id/preferences', auth_1.authenticate, (0, validation_1.validateRequest)(UserDto_1.UserPreferencesDto), userController.updatePreferences);
router.post('/:id/change-password', auth_1.authenticate, (0, validation_1.validateRequest)(UserDto_1.ChangePasswordDto), userController.changePassword);
router.delete('/:id', auth_1.authenticate, userController.deleteUser);
exports.default = router;
//# sourceMappingURL=userRoutes.js.map